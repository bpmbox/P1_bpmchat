{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,UAAT,CAAoB,OAApB,EAA6B,IAA7B,EAAmC,OAAnC,EAA4C;AAC1C,MAAM,aAAa,QAAQ,aAAR,CAAsB,IAAtB,CAAnB;;AAD0C,8BAET,WAAW,cAAX,CAA0B,IAA1B,EAAgC,CAAhC,CAFS;;AAAA;;AAAA,MAEnC,UAFmC;AAAA,MAEvB,UAFuB;;AAG1C,MAAM,aAAa,WAAW,KAAX,CAAiB,CAAjB,MAAwB,WAAW,KAAX,CAAiB,CAAjB,CAA3C;AACA,MAAI,UAAJ,EAAgB;AACd,YAAQ,MAAR,CAAe;AACb,gBADa;AAEb,sBAFa;;AAIb,SAJa,eAIT,KAJS,EAIF;AACT,eAAO,MAAM,eAAN,CAAsB,UAAtB,EAAkC,GAAlC,CAAP;AACD;AANY,KAAf;AAQD;AACF;;;kBAGc;AACb,SAAO;AACL,yBAAqB,yBAAC,OAAD;AAAA,aAAc;AACjC,+BADiC,mCACT,IADS,EACH;AAC5B,cAAI,KAAK,KAAT,EAAgB;AACd,uBAAW,OAAX,EAAoB,IAApB,EAA0B,2BAA1B;AACD;AACF,SALgC;AAMjC,sBANiC,0BAMlB,IANkB,EAMZ;AACnB,cAAI,KAAK,MAAL,CAAY,IAAZ,KAAqB,OAAzB,EAAkC;AAChC,uBAAW,OAAX,EAAoB,IAApB,EAA0B,2BAA1B;AACD;AACF;AAVgC,OAAd;AAAA,KADhB;AAaL,yBAAqB,yBAAC,OAAD;AAAA,aAAc;AACjC,uBADiC,2BACjB,IADiB,EACX;AACpB,cAAM,aAAa,QAAQ,aAAR,CAAsB,IAAtB,CAAnB;AACA,cAAM,aAAa,WAAW,aAAX,CAAyB,IAAzB,CAAnB;AACA,cAAI,WAAW,KAAX,KAAqB,OAAzB,EAAkC;AAChC,uBAAW,OAAX,EAAoB,IAApB,EAA0B,2BAA1B;AACD;AACF;AAPgC,OAAd;AAAA;AAbhB,GADM;AAwBb,eAAa;AACX,yBAAqB,CADV;AAEX,yBAAqB;AAFV;AAxBA,C","file":"index.js","sourcesContent":["function checkSpace(context, node, message) {\n  const sourceCode = context.getSourceCode(node);\n  const [identifier, punctuator] = sourceCode.getFirstTokens(node, 2);\n  const hasntSpace = identifier.range[1] === punctuator.range[0];\n  if (hasntSpace) {\n    context.report({\n      node,\n      message,\n      // @see http://eslint.org/docs/developer-guide/working-with-rules#applying-fixes\n      fix(fixer) {\n        return fixer.insertTextAfter(identifier, ' ');\n      },\n    });\n  }\n}\n\n// @see http://eslint.org/docs/developer-guide/working-with-rules#the-context-object\nexport default {\n  rules: {\n    'space-after-async': (context) => ({\n      ArrowFunctionExpression(node) {\n        if (node.async) {\n          checkSpace(context, node, 'Missing space after async');\n        }\n      },\n      CallExpression(node) {\n        if (node.callee.name === 'async') {\n          checkSpace(context, node, 'Missing space after async');\n        }\n      },\n    }),\n    'space-after-await': (context) => ({\n      YieldExpression(node) {\n        const sourceCode = context.getSourceCode(node);\n        const identifier = sourceCode.getFirstToken(node);\n        if (identifier.value === 'await') {\n          checkSpace(context, node, 'Missing space after await');\n        }\n      },\n    }),\n  },\n  rulesConfig: {\n    'space-after-async': 0,\n    'space-after-await': 0,\n  },\n};\n"]}