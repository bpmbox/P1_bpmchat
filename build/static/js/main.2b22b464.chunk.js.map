{"version":3,"sources":["firebase.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","ref","tutorial","push","key","value","child","update","remove","AddTutorial","props","onChangeTitle","bind","onChangeDescription","onChangeName","onChangeText","saveTutorial","newTutorial","state","title","description","name","text","published","submitted","e","this","setState","target","data","TutorialDataService","create","then","console","log","catch","className","onClick","htmlFor","type","id","required","onChange","Component","Tutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","prevState","status","delete","refreshList","nextProps","TutorialsList","setActiveTutorial","removeAllTutorials","onDataChange","tutorials","currentIndex","getAll","on","off","items","forEach","item","val","index","deleteAll","JSON","stringify","class","src","height","map","dangerouslySetInnerHTML","__html","App","href","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.2b22b464.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/database\";\n\nlet config = {\n  apiKey: \"AIzaSyCsOjFyAAuFr1CITcnufG-GpZBKpLgUP90\",\n  authDomain: \"rpa999-56929.firebaseapp.com\",\n  databaseURL: \"https://rpa999-56929.firebaseio.com\",\n  projectId: \"rpa999-56929\",\n  storageBucket: \"rpa999-56929.appspot.com\",\n  messagingSenderId: \"155298248089\",\n  appId: \"1:155298248089:web:e25d64dc9f5370c4\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase.database();\n","import firebase from \"../firebase\";\n\nconst db = firebase.ref(\"/messagess\");\n//serach をここに記載する\nclass TutorialDataService {\n\n  seach() {\n    const sdb = firebase.ref(\"/messagess/\" + \"aaa\");\n    return sdb;\n  }\n\n  getAll() {\n    return db;\n  }\n\n  create(tutorial) {\n    return db.push(tutorial);\n  }\n\n  update(key, value) {\n    return db.child(key).update(value);\n  }\n\n  delete(key) {\n    return db.child(key).remove();\n  }\n\n  deleteAll() {\n    return db.remove();\n  }\n}\n\nexport default new TutorialDataService();\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    \n\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      name:\"\",\n      text:\"\",\n      published: false,\n\n      submitted: false,\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value,\n    });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  onChangeText(e) {\n    this.setState({\n      text: e.target.value,\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  saveTutorial() {\n    let data = {\n      title: this.state.title,\n      description: this.state.description,\n      published: false,\n      name: this.state.name,\n      text: this.state.text,\n    };\n\n    TutorialDataService.create(data)\n      .then(() => {\n        console.log(\"Created new item successfully!\");\n        this.setState({\n          submitted: true,\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      title: \"\",\n      description: \"\",\n      name:\"\",\n      text:\"\",\n      published: false,\n\n      submitted: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">name</label>\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                required\n                value={this.state.name}\n                onChange={this.onChangeName}\n                name=\"name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">text</label>\n              <textarea\n                type=\"text\"\n                className=\"form-control\"\n                id=\"text\"\n                required\n                value={this.state.text}\n                onChange={this.onChangeText}\n                name=\"text\"\n              />\n            </div>\n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    \n\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        key: null,\n        title: \"\",\n        name:\"\",\n        text:\"\",\n        description: \"\",\n        published: false,\n      },\n      message: \"\",\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { tutorial } = nextProps;\n    if (prevState.currentTutorial.key !== tutorial.key) {\n      return {\n        currentTutorial: tutorial,\n        message: \"\"\n      };\n    }\n\n    return prevState.currentTutorial;\n  }\n//ここでStateの初期化\n  componentDidMount() {\n    this.setState({\n      currentTutorial: this.props.tutorial,\n    });\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n    //alert(title)\n    this.setState((prevState) => ({\n     // console.log(prevState)\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        title: title,\n      },\n    }));\n  }\n\n  onChangeName(e) {\n    const name = e.target.value;\n    //alert(title)\n    this.setState((prevState) => ({\n     // console.log(prevState)\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        name: name,\n      },\n    }));\n  }\n\n  onChangeText(e) {\n    const text = e.target.value;\n    //alert(title)\n    this.setState((prevState) => ({\n     // console.log(prevState)\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        text: text,\n      },\n    }));\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n\n    this.setState((prevState) => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        description: description,\n      },\n    }));\n  }\n\n  updatePublished(status) {\n    TutorialDataService.update(this.state.currentTutorial.key, {\n      published: status,\n    })\n      .then(() => {\n        this.setState((prevState) => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status,\n          },\n          message: \"The status was updated successfully!\",\n        }));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  updateTutorial() {\n   //// alert(JSON.stringify(this.state))\n    if (this.state.currentTutorial.title === \"\") {\n\n    }\n///alert(JSON.stringify(this.state.currentTutorial))\n    const data = {\n      name: this.state.currentTutorial.name,\n      text: this.state.currentTutorial.text,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n    };\n    ///alert(\"test\")\n    ////alert(JSON.stringify(data))\n    TutorialDataService.update(this.state.currentTutorial.key, data)\n      .then(() => {\n        this.setState({\n          message: \"The tutorial was updated successfully!\",\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  deleteTutorial() {\n    TutorialDataService.delete(this.state.currentTutorial.key)\n      .then(() => {\n        this.props.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        <h4>Tutorial</h4>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentTutorial.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">name</label>\n                <textarea\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  value={currentTutorial.name}\n                  onChange={this.onChangeName}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">text</label>\n                <textarea\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"text\"\n                  value={currentTutorial.text}\n                  onChange={this.onChangeText}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentTutorial.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nimport Tutorial from \"./tutorial.component\";\nimport AddTutorial from \"./add-tutorial.component\";\n\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.onDataChange = this.onDataChange.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n    };\n  }\n\n  componentDidMount() {\n   \n    TutorialDataService.getAll().on(\"value\", this.onDataChange);\n    //wScroll();\n  }\n\n  componentWillUnmount() {\n    TutorialDataService.getAll().off(\"value\", this.onDataChange);\n    //messageFeed.scrollTop = messageFeed.scrollHeight;\n  }\n\n  onDataChange(items) {\n    let tutorials = [];\n\n    items.forEach((item) => {\n      let key = item.key;\n      let data = item.val();\n      tutorials.push({\n        key: key,\n        title: data.title,\n        name:data.name,\n        text:data.text,\n        description: data.description,\n        published: data.published,\n      });\n    });\n\n    this.setState({\n      tutorials: tutorials,\n    });\n  }\n\n  refreshList() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1,\n    });\n  }\n//子供のPROPにデータを送る\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index,\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(() => {\n        this.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { tutorials, currentTutorial, currentIndex } = this.state;\n    console.log(JSON.stringify(tutorials))\n    //let aaaa = \"\"\n    return (\n     \n      <div className=\"list row\">\n        <div className=\"col-md-6\">\n          <h4>Tutorials List</h4>\n          <AddTutorial />\n          <div class=\"chat-ui-canvas\">\n          <div id=\"header\" class=\"header header-scrolled\">\n              <div class=\"top-icons\">\n                <div class=\"back-arrow\">\n                  <div class=\"back-arrow-line back-arrow-line-1\"></div>\n                  <div class=\"back-arrow-line back-arrow-line-2\"></div>\n                  <div class=\"back-arrow-line back-arrow-line-3\"></div>\n                </div>\n                <div class=\"phone-icon\">\n                  <img src=\"https://i.imgur.com/4OTkocV.png\" height=\"50%\"/>\n                </div>\n              </div>\n              <div class=\"user-header-image\"></div>\n              <div class=\"user-name-header\">\n                <h1>Kenichi miyata</h1>\n\n              </div>\n            </div>\n          <div id=\"message-feed\" class=\"message-feed message-feed-unscrolled\">\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.map((tutorial, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  <div>{tutorial.key}</div>\n                  <div dangerouslySetInnerHTML={{ __html: tutorial.title }}></div>\n                  <div dangerouslySetInnerHTML={{ __html: tutorial.description }}></div>\n                  <div dangerouslySetInnerHTML={{ __html: tutorial.name }}></div>\n                  <div dangerouslySetInnerHTML={{ __html: tutorial.text }}></div>\n                  \n\n                </li>\n              ))\n            }\n          </ul>\n          </div>\n          </div>\n\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllTutorials}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentTutorial ? (\n            <Tutorial\n              tutorial={currentTutorial}\n              refreshList={this.refreshList}\n            />\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Tutorial...</p>\n            </div>\n          )}\n        </div>\n      </div>\n      \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import fromCDN from \"from-cdn\";\n//import PropTypes from \"prop-types\";\nimport \"./App.css\";\n//\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/tutorials\" className=\"navbar-brand\">\n            bezKoder\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Tutorials\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/4444\"} className=\"nav-link\">\n                Tutorials4444\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <h2>React Firebase Database CRUD</h2>\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path={[\"/4444\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}